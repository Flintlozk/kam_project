import {
  AudienceDomainStatus,
  CustomerDomainStatus,
  EnumHandleResponseMessageType,
  EnumPurchaseOrderStatus,
  EnumPurchasingPayloadType,
  LeadsDomainStatus,
} from '@reactor-room/itopplus-model-lib';

const {
  ADD_PRODUCT_VIA_SHARE_LINK,
  CONFIRM_PAYMENT_SELECTION,
  CHECK_PRODUCT_SUFFICIENT,
  VERIFY_ORDER_CONTEXT,
  UPDATE_DELIVERY_ADDRESS,
  RESPONSE_CONFIRM_ORDER,
  ADD_ITEM_TO_CART,
  SELECT_LOGISTIC_METHOD,
  SELECT_PAYMENT_METHOD,
  SUBMIT_PAYPAL_PAYMENT,
  SUBMIT_PAYPAL_PAYMENT_APPROVE,
  SUBMIT_KBANK_PAYMENT,
  SUBMIT_PAY_SOLUTION_PAYMENT,
  SUBMIT_2C2P_PAYMENT,
  REDIRECT_2C2P_PAYMENT,
  SUBMIT_OMISE_PAYMENT,
  SUBMIT_OMISE_PROMTPAY_PAYMENT,
  SUBMIT_OMISE_CREDIT_CARD_PAYMENT,
  SUBMIT_OMISE_INTERNET_BANKING,
  INTERVAL_CHECK_PURCHASE_ORDER_STATUS,
  CHECK_PURCHASE_ORDER_STATUS,
  GET_PRODUCT_IN_CART,
} = EnumHandleResponseMessageType;
const {
  // SELECT_ORDER,
  // SEND_CART,
  SEND_RECEIPT,
  UPDATE_CART,
  CONFIRM_ORDER,
  RECEIVE_ORDER_CONFIRMATION,
  RECEIVE_ORDER_CONFIRMATION_FLAT_RATE,
  COMBINE_LOGISTIC_PAYMENT,
  LOGISTIC_SELECTOR,
  PAYMENT_SELECTOR,
  SEND_PAYPAL_PAYMENT,
  SEND_KBANK_PAYMENT,
  SEND_PAY_SOLUTION_PAYMENT,
  SEND_PAYMENT,
  SEND_BANK_ACCOUNT,
  SEND_TRACKING_NUMBER,
  SEND_TRACKING_NUMBER_COD,
  GET_PAYPAL_INFO,
  GET_OMISE_ORDER_INFO,
  REPEAT_SEND_CHECKOUT,
  CHECKOUT_PAYPAL,
  CHECKOUT_2C2P,
  SUBMIT_2C2P_PAYMENT_SUCCESS,
  SUBMIT_2C2P_PAYMENT_FAIL,
  CHECKOUT_OMISE,
} = EnumPurchasingPayloadType;

export const isAudienceAllowed = (step: CustomerDomainStatus | AudienceDomainStatus | LeadsDomainStatus): boolean => {
  if (step === AudienceDomainStatus.REJECT || step === AudienceDomainStatus.EXPIRED) {
    return false;
  } else {
    return true;
  }
};

export const isCurrentTemplateAllowed = (step: EnumPurchasingPayloadType, currentStep: EnumPurchaseOrderStatus): boolean => {
  const condition = {
    FOLLOW: [COMBINE_LOGISTIC_PAYMENT],
    WAITING_FOR_PAYMENT: [
      COMBINE_LOGISTIC_PAYMENT,
      LOGISTIC_SELECTOR,
      PAYMENT_SELECTOR,
      GET_PAYPAL_INFO,
      GET_OMISE_ORDER_INFO,
      SUBMIT_2C2P_PAYMENT_SUCCESS,
      SUBMIT_2C2P_PAYMENT_FAIL,
      SUBMIT_OMISE_PAYMENT,
      CHECKOUT_PAYPAL,
      CHECKOUT_2C2P,
      CHECKOUT_OMISE,
    ],
    CONFIRM_PAYMENT: [
      PAYMENT_SELECTOR,
      SEND_BANK_ACCOUNT,
      SEND_PAYPAL_PAYMENT,
      SEND_KBANK_PAYMENT,
      SEND_PAY_SOLUTION_PAYMENT,
      GET_PAYPAL_INFO,
      CHECKOUT_PAYPAL,
      CHECKOUT_2C2P,
      CHECKOUT_OMISE,
      GET_OMISE_ORDER_INFO,
      SUBMIT_OMISE_PAYMENT,
      SUBMIT_2C2P_PAYMENT_SUCCESS,
      SUBMIT_2C2P_PAYMENT_FAIL,
    ],
    WAITING_FOR_SHIPMENT: [SUBMIT_2C2P_PAYMENT_SUCCESS, SUBMIT_2C2P_PAYMENT_FAIL, SUBMIT_OMISE_PAYMENT],
    CLOSE_SALE: [],
    REJECT: [],
    EXPIRED: [],
  };
  return condition[currentStep].includes(step);
};

export function allowPipelineActionOnStep(step: EnumPurchasingPayloadType, currentStep: EnumPurchaseOrderStatus): boolean {
  const condition = {
    FOLLOW: [UPDATE_CART, SEND_RECEIPT, CONFIRM_ORDER],
    WAITING_FOR_PAYMENT: [UPDATE_CART, SEND_RECEIPT, SEND_PAYMENT, LOGISTIC_SELECTOR, PAYMENT_SELECTOR, RECEIVE_ORDER_CONFIRMATION],
    CONFIRM_PAYMENT: [UPDATE_CART, SEND_RECEIPT, REPEAT_SEND_CHECKOUT, RECEIVE_ORDER_CONFIRMATION_FLAT_RATE],
    WAITING_FOR_SHIPMENT: [SEND_RECEIPT, SEND_TRACKING_NUMBER, SEND_TRACKING_NUMBER_COD],
    CLOSE_SALE: [],
    REJECT: [],
    EXPIRED: [],
  };
  return condition[currentStep].includes(step);
}

export const allowPostbackMessage = (step: EnumHandleResponseMessageType, currentStep: EnumPurchaseOrderStatus): boolean => {
  const condition = {
    FOLLOW: [ADD_ITEM_TO_CART, ADD_PRODUCT_VIA_SHARE_LINK],
    WAITING_FOR_PAYMENT: [
      REDIRECT_2C2P_PAYMENT,
      ADD_ITEM_TO_CART,
      ADD_PRODUCT_VIA_SHARE_LINK,
      SELECT_LOGISTIC_METHOD,
      SELECT_PAYMENT_METHOD,
      CHECK_PRODUCT_SUFFICIENT,
      VERIFY_ORDER_CONTEXT,
      CONFIRM_PAYMENT_SELECTION,
      UPDATE_DELIVERY_ADDRESS,
      GET_PRODUCT_IN_CART,
      SUBMIT_KBANK_PAYMENT,
      SUBMIT_PAY_SOLUTION_PAYMENT,
      SUBMIT_2C2P_PAYMENT,
      GET_OMISE_ORDER_INFO,
      SUBMIT_OMISE_PAYMENT,
      SUBMIT_OMISE_PROMTPAY_PAYMENT,
      SUBMIT_OMISE_CREDIT_CARD_PAYMENT,
      SUBMIT_OMISE_INTERNET_BANKING,
      INTERVAL_CHECK_PURCHASE_ORDER_STATUS,
      CHECK_PURCHASE_ORDER_STATUS,
      SUBMIT_PAYPAL_PAYMENT,
      SUBMIT_PAYPAL_PAYMENT_APPROVE,
    ],
    CONFIRM_PAYMENT: [
      SUBMIT_2C2P_PAYMENT,
      REDIRECT_2C2P_PAYMENT,
      SUBMIT_PAYPAL_PAYMENT,
      GET_OMISE_ORDER_INFO,
      SUBMIT_OMISE_PAYMENT,
      SUBMIT_OMISE_PROMTPAY_PAYMENT,
      SUBMIT_OMISE_CREDIT_CARD_PAYMENT,
      SUBMIT_OMISE_INTERNET_BANKING,
      INTERVAL_CHECK_PURCHASE_ORDER_STATUS,
      CHECK_PURCHASE_ORDER_STATUS,
      CHECK_PRODUCT_SUFFICIENT,
      VERIFY_ORDER_CONTEXT,
    ],
    WAITING_FOR_SHIPMENT: [CHECK_PURCHASE_ORDER_STATUS, REDIRECT_2C2P_PAYMENT],
    CLOSE_SALE: [],
    REJECT: [],
    EXPIRED: [],
  };
  return condition[currentStep].includes(step);
};

export const allowPostbackButton = (step: EnumHandleResponseMessageType, currentStep: EnumPurchaseOrderStatus): boolean => {
  const condition = {
    FOLLOW: [RESPONSE_CONFIRM_ORDER],
    WAITING_FOR_PAYMENT: [],
    CONFIRM_PAYMENT: [],
    WAITING_FOR_SHIPMENT: [],
    CLOSE_SALE: [],
    REJECT: [],
    EXPIRED: [],
  };
  return condition[currentStep].includes(step);
};
